import speech_recognition as sr
import tkinter as tk
from PIL import Image, ImageTk, ImageSequence
import threading

# –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ GIF –∞–Ω–∏–º–∞—Ü–∏–∏ –∂–µ—Å—Ç–æ–≤
sign_language_gifs = {
    "—Å”ô–ª–µ–º": "surdosigns/salem.gif",
    "–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞": "surdosigns/matematika.gif",
    "“õ–æ—à –±–æ–ª": "surdosigns/sau_bol.gif",
    "—Ä–∞“õ–º–µ—Ç": "surdosigns/rahmet.gif",
    "–∂–æ“õ": "surdosigns/jok.gif",
    "–∏”ô": "surdosigns/ia.gif",
    "—Å—É": "surdosigns/su.gif",
    "—Ç–∞–º–∞–∫": "surdosigns/tamaq.gif",
    "–¥“±—Ä—ã—Å": "surdosigns/durys.gif",
    "–∫–µ—à—ñ—Ä—ñ“£—ñ–∑": "surdosigns/kesiriniz.gif",
    "–∂“±–º—ã—Å": "surdosigns/zhumys.gif",
    "“Ø–π": "surdosigns/uy.gif",
    "–ø–æ—à—Ç–∞": "surdosigns/poshta.gif"
}

# –ö–ª–∞—Å—Å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏ GIF
class AnimatedGIF(tk.Label):
    def __init__(self, master, gif_path):
        super().__init__(master)
        self.gif_path = gif_path
        self.playing = True
        self.frames = []
        self.load_gif()
        self.after(self.delay, self.play)

    def load_gif(self):
        im = Image.open(self.gif_path)
        try:
            while True:
                self.frames.append(ImageTk.PhotoImage(im.copy()))
                im.seek(len(self.frames))
        except EOFError:
            pass
        self.delay = im.info.get('duration', 100)
        self.idx = 0
        self.config(image=self.frames[0])

    def play(self):
        if not self.playing:
            return
        self.config(image=self.frames[self.idx])
        self.idx = (self.idx + 1) % len(self.frames)
        self.after(self.delay, self.play)

    def stop(self):
        self.playing = False

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∂–µ—Å—Ç–æ–≤
def recognize_speech():
    r = sr.Recognizer()
    with sr.Microphone() as source:
        status_label.config(text="–¢—ã“£–¥–∞–ø –∂–∞—Ç—ã—Ä...")
        audio = r.listen(source)
        try:
            text = r.recognize_google(audio, language="kk-KZ").lower()
            status_label.config(text=f"–¢–∞–Ω—ã–ª“ì–∞–Ω: {text}")
            for word in sign_language_gifs:
                if word in text:
                    show_sign(word)
                    break
        except:
            status_label.config(text="–¢–∞–Ω—É“ì–∞ –∫–µ–ª–º–µ–¥—ñ.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è GIF –∞–Ω–∏–º–∞—Ü–∏–∏ –∂–µ—Å—Ç–∞
def show_sign(word):
    clear_sign_frame()
    gif_path = sign_language_gifs.get(word)
    if gif_path:
        gif_player = AnimatedGIF(sign_frame, gif_path)
        gif_player.pack()
        refresh_btn.pack(pady=10)

# –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ GIF –∏ –∫–Ω–æ–ø–∫–∏ "–ñ–∞“£–∞—Ä—Ç—É"
def clear_sign_frame():
    for widget in sign_frame.winfo_children():
        if isinstance(widget, AnimatedGIF):
            widget.stop()
        widget.destroy()
    refresh_btn.pack_forget()

# –û–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
def refresh_interface():
    clear_sign_frame()
    status_label.config(text="–ë–∞—Å—Ç–∞—É “Ø—à—ñ–Ω '–¢—ã“£–¥–∞—É' –±–∞—Ç—ã—Ä–º–∞—Å—ã–Ω –±–∞—Å—ã“£—ã–∑")

# --- GUI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å ---
root = tk.Tk()
root.title("AI-–°—É—Ä–¥–æ–ö–∞–º–µ—Ä–∞ (–ü—Ä–æ—Ç–æ—Ç–∏–ø)")
root.geometry("1280x800")

# –®—Ä–∏—Ñ—Ç –ø–æ–±–æ–ª—å—à–µ –¥–ª—è –≤—ã—Å–æ–∫–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
status_label = tk.Label(root, text="–ë–∞—Å—Ç–∞—É “Ø—à—ñ–Ω '–¢—ã“£–¥–∞—É' –±–∞—Ç—ã—Ä–º–∞—Å—ã–Ω –±–∞—Å—ã“£—ã–∑", font=("Arial", 16))
status_label.pack(pady=20)

# –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è GIF
sign_frame = tk.Frame(root, width=1000, height=500)
sign_frame.pack(pady=30)

# –ö–Ω–æ–ø–∫–∞ "–¢—ã“£–¥–∞—É"
btn = tk.Button(root, text="üé§ –¢—ã“£–¥–∞—É", font=("Arial", 16),
                width=20, height=2,
                command=lambda: threading.Thread(target=recognize_speech).start())
btn.pack(pady=10)

# –ö–Ω–æ–ø–∫–∞ "–ñ–∞“£–∞—Ä—Ç—É"
refresh_btn = tk.Button(root, text="üîÅ –ñ–∞“£–∞—Ä—Ç—É", font=("Arial", 14),
                        width=20, height=2,
                        command=refresh_interface)

root.mainloop()
